plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.4.4"
    id("io.micronaut.test-resources") version "4.4.4"
    id("io.micronaut.aot") version "4.4.4"
    id("com.coditory.manifest") version "0.2.6"
}

version = "1.0.0"
group = "ca.team1310.ravenbrain"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    annotationProcessor("io.micronaut.servlet:micronaut-servlet-processor")
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
    implementation("io.micronaut.flyway:micronaut-flyway")

    annotationProcessor 'io.micronaut.data:micronaut-data-processor'
    implementation 'io.micronaut.data:micronaut-data-jdbc'

    implementation("io.micronaut.security:micronaut-security-jwt")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    compileOnly("org.projectlombok:lombok:1.18.36")
    compileOnly("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.mysql:mysql-connector-j")
    runtimeOnly("org.flywaydb:flyway-mysql")
    runtimeOnly("org.yaml:snakeyaml")
    testImplementation("io.micronaut:micronaut-http-client")
    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    aotPlugins platform("io.micronaut.platform:micronaut-platform:4.7.6")
    aotPlugins("io.micronaut.security:micronaut-security-aot")
}


application {
    mainClass = "ca.team1310.ravenbrain.Application"
}
java {
    sourceCompatibility = JavaVersion.toVersion("21")
    targetCompatibility = JavaVersion.toVersion("21")
}


graalvmNative.toolchainDetection = false

micronaut {
    runtime("tomcat")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("ca.team1310.ravenbrain.*")
    }
    testResources {
        additionalModules.add("jdbc-mysql")
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        replaceLogbackXml = true
        configurationProperties.put("micronaut.security.jwks.enabled", "false")
    }
}


tasks.named("dockerfileNative") {
    jdkVersion = "21"
}


manifest {
    buildAttributes = false
    implementationAttributes = true
    scmAttributes = false
    attributes = [
            "Implementation-Title": "Runnymede Robotics Team 1310 Raven Brain",
            "Build-Time"          : Instant.now().toString().substring(0, 19).replace("T", " ") + " UTC"
    ]
}
distributions {
    eb {
        contents {
            into('lib') {
                from shadowJar
            }
            into('') {
                from 'aws'
            }
            rename 'raven-brain-(.*).jar', 'raven-brain.jar'
        }
    }
}
tasks.register('createElasticbeanstalkDist', Copy) {
    from clean
    from ebDistZip
    destinationDir file('build/distributions')
    rename { String fileName ->
        fileName.replace("-$project.version", "")
    }
}